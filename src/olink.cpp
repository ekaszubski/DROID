#include <ontology/olink.h>

/********************************************************************************
 * Print out the link information
 ********************************************************************************/
void Olink::printLink(){
  if (valued){
  cout << "\t\tLink Name: " << name << " Nodes (" << start_node << "," << end_node << ") V: " << value << "\n";
  } else {
  cout << "\t\tLink Name: " << name << " Nodes (" << start_node << "," << end_node << ")\n";
  }
}

/********************************************************************************
 * Constructor function with no info
 ********************************************************************************/
Olink::Olink(){
  

  valued = false;

}


/********************************************************************************
 * Constructor function with all info
 ********************************************************************************/
Olink::Olink(string n_name, int node1, int node2){

  name = n_name;
  start_node = node1;
  end_node = node2;
  valued = false;

}

/********************************************************************************
 * Set the name of the link
 ********************************************************************************/
void Olink::setName(string n_name){

  name = n_name;
}


/********************************************************************************
 * Set the starting node of the link
 ********************************************************************************/
void Olink::setStart(int node_id){

  start_node = node_id;

}


/********************************************************************************
 * Set the ending node of the link
 ********************************************************************************/
void Olink::setEnd(int node_id){

  end_node = node_id;

}

/********************************************************************************
 * Set all the information of the node
 ********************************************************************************/
void Olink::setInfo(string n_name, int node1, int node2){

  name = n_name;
  start_node = node1;
  end_node = node2;

}

/********************************************************************************
 * Set all the information of the node
 ********************************************************************************/
void Olink::setInfo2(string n_name, int node2){

  name = n_name;
  end_node = node2;

}

/********************************************************************************
 * Set the value of the node, and set the valued parameter to be true
 ********************************************************************************/
void Olink::setValue(int v){

  value = v;
  valued = true;

}

/********************************************************************************
 * Return the id of the start node of the link
 ********************************************************************************/
int Olink::getStart(){

  return start_node;

}


/********************************************************************************
 * Return the id of the end node of the link
 ********************************************************************************/
int Olink::getEnd(){

  return end_node;

}



/********************************************************************************
 * Return the name of the link  
 ********************************************************************************/
string Olink::getName(){

  return name;

}

/********************************************************************************
 * Does the link have a value associated with it?
 ********************************************************************************/
bool Olink::isValued(){

  return valued;

}

/********************************************************************************
 * Return the value of the link
 ********************************************************************************/
int Olink::getValue(){

  return value;

}
